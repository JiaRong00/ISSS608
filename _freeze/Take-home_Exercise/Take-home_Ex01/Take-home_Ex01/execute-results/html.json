{
  "hash": "8cb060c9237bdbafaf5a292886f9a330",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home Exercise 1\"\nformat:\n  html:\n    fontcolor: '#3b3b3b'\n    code-line-numbers: true\nauthor: \"Moo Jia Rong\"\ndate: \"February 1, 2025\"\ndate-modified: \"last-modified\"\nexecute:\n  echo: true\n  eval: true\n  warning: false\n  freeze: true \n---\n\n\n\n### **1 Overview**\n\n#### **1.1 Background**\n\nHeart attack is one of the leading causes of mortality globally. According to findings of research studies, heart attacks are increasingly common in young adults (aged 40 or below) [1](https://www.sciencedaily.com/releases/2019/03/190307081026.htm). The alarming trend highlights a need to understand the potential causes and risk factors of early heart attacks and the differences in the profiles of young adult heart attack patients from older patients to enable early detection and enforcement of preventive measures.\n\n#### **1.2 Dataset**\n\nIn this exercise, we have obtained a dataset on heart attack incidents in Japan from [Kaggle](https://www.kaggle.com/datasets/ashaychoudhary/heart-attack-in-japan-youth-vs-adult), consisting of data on heart attack victims aged 18 to 79.\n\n#### **1.3 Objectives**\n\nUsing the Japan heart attack dataset, we aim to perform Exploratory Data Analysis (EDA) to uncover insights on:\n\n### **2 Getting Started**\n\n#### **2.1 Loading Packages**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse)\n```\n:::\n\n\n\n#### **2.2 Importing Data**\n\nThe dataset used in this exercise is the *japan_heart_attack_dataset.csv* file downloaded from Kaggle. The file is imported into R environment using `read_csv()`.\n\nUsing the `glimpse()` function, we observe that the dataset consists of 30,000 records spanning across 32 columns. Of which, there are 17 relevant variables and 15 extra column variables which are irrelevant to our analysis.\n\nIn addition, by viewing the first few entries of each column, we can see that there are both categorical and continuous variables in the dataset.\n\nWith a focus on the 17 relevant variables, a data dictionary table is generated, showing the range for the 7 continuous variables and the unique values for the 10 categorical variables.\n\n::: panel-tabset\n## Import data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nheart_attack <- read_csv(\"data/japan_heart_attack_dataset.csv\")\n```\n:::\n\n\n\n## Glimpse data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(heart_attack)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 30,000\nColumns: 32\n$ Age                     <dbl> 56, 69, 46, 32, 60, 25, 78, 38, 56, 75, 36, 40…\n$ Gender                  <chr> \"Male\", \"Male\", \"Male\", \"Female\", \"Female\", \"F…\n$ Region                  <chr> \"Urban\", \"Urban\", \"Rural\", \"Urban\", \"Rural\", \"…\n$ Smoking_History         <chr> \"Yes\", \"No\", \"Yes\", \"No\", \"No\", \"No\", \"No\", \"Y…\n$ Diabetes_History        <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"Yes\", \"No…\n$ Hypertension_History    <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"Yes\", \"No…\n$ Cholesterol_Level       <dbl> 186.4002, 185.1367, 210.6966, 211.1655, 223.81…\n$ Physical_Activity       <chr> \"Moderate\", \"Low\", \"Low\", \"Moderate\", \"High\", …\n$ Diet_Quality            <chr> \"Poor\", \"Good\", \"Average\", \"Good\", \"Good\", \"Go…\n$ Alcohol_Consumption     <chr> \"Low\", \"Low\", \"Moderate\", \"High\", \"High\", \"Hig…\n$ Stress_Levels           <dbl> 3.644786, 3.384056, 3.810911, 6.014878, 6.8068…\n$ BMI                     <dbl> 33.96135, 28.24287, 27.60121, 23.71729, 19.771…\n$ Heart_Rate              <dbl> 72.30153, 57.45764, 64.65870, 55.13147, 76.667…\n$ Systolic_BP             <dbl> 123.90209, 129.89331, 145.65490, 131.78522, 10…\n$ Diastolic_BP            <dbl> 85.68281, 73.52426, 71.99481, 68.21133, 92.902…\n$ Family_History          <chr> \"No\", \"Yes\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No…\n$ Heart_Attack_Occurrence <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\"…\n$ Extra_Column_1          <dbl> 0.40498852, 0.03627815, 0.85297888, 0.39085280…\n$ Extra_Column_2          <dbl> 0.43330004, 0.51256694, 0.21959083, 0.29684675…\n$ Extra_Column_3          <dbl> 0.62871236, 0.66839275, 0.61343656, 0.15572404…\n$ Extra_Column_4          <dbl> 0.70160955, 0.11552874, 0.50800995, 0.87025144…\n$ Extra_Column_5          <dbl> 0.49814235, 0.42381938, 0.90066981, 0.39035591…\n$ Extra_Column_6          <dbl> 0.007901312, 0.083932768, 0.227205241, 0.40318…\n$ Extra_Column_7          <dbl> 0.79458257, 0.68895108, 0.49634358, 0.74140891…\n$ Extra_Column_8          <dbl> 0.29077922, 0.83016364, 0.75210679, 0.22396813…\n$ Extra_Column_9          <dbl> 0.49719307, 0.63449028, 0.18150125, 0.32931387…\n$ Extra_Column_10         <dbl> 0.52199452, 0.30204337, 0.62918031, 0.14319054…\n$ Extra_Column_11         <dbl> 0.79965663, 0.04368285, 0.01827617, 0.90778075…\n$ Extra_Column_12         <dbl> 0.72239788, 0.45166789, 0.06322702, 0.54232201…\n$ Extra_Column_13         <dbl> 0.1487387, 0.8786714, 0.1465122, 0.9224606, 0.…\n$ Extra_Column_14         <dbl> 0.8340099, 0.5356022, 0.9972962, 0.6262165, 0.…\n$ Extra_Column_15         <dbl> 0.061632229, 0.617825340, 0.974455410, 0.22860…\n```\n\n\n:::\n:::\n\n\n\n## Data dictionary\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\ndata_dict <- data.frame(matrix(ncol = 3, nrow = 0))\nx <- c(\"Variable\", \"Type\", \"Values\")\ncolnames(data_dict) <- x\n\ncolumn_names <- colnames(heart_attack)[1:17]\nfor (column in column_names){\n  values <- heart_attack[, column]\n  if (class(heart_attack[[column]])==\"numeric\"){\n    col_label<-paste0(\"(\", min(values), \", \", max(values), \")\")\n    col_type=\"Continuous\"\n  }\n  else {\n    col_label<-paste0(unique(values))\n    col_type=\"Categorical\"\n  }\n  new.row <- data.frame(Variable = column, Type = col_type , Values = col_label)\n  data_dict <- rbind(data_dict, new.row)\n  \n}\n\nknitr::kable(data_dict, \"html\")\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Variable </th>\n   <th style=\"text-align:left;\"> Type </th>\n   <th style=\"text-align:left;\"> Values </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Age </td>\n   <td style=\"text-align:left;\"> Continuous </td>\n   <td style=\"text-align:left;\"> (18, 79) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Gender </td>\n   <td style=\"text-align:left;\"> Categorical </td>\n   <td style=\"text-align:left;\"> c(\"Male\", \"Female\") </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Region </td>\n   <td style=\"text-align:left;\"> Categorical </td>\n   <td style=\"text-align:left;\"> c(\"Urban\", \"Rural\") </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Smoking_History </td>\n   <td style=\"text-align:left;\"> Categorical </td>\n   <td style=\"text-align:left;\"> c(\"Yes\", \"No\") </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Diabetes_History </td>\n   <td style=\"text-align:left;\"> Categorical </td>\n   <td style=\"text-align:left;\"> c(\"No\", \"Yes\") </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Hypertension_History </td>\n   <td style=\"text-align:left;\"> Categorical </td>\n   <td style=\"text-align:left;\"> c(\"No\", \"Yes\") </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Cholesterol_Level </td>\n   <td style=\"text-align:left;\"> Continuous </td>\n   <td style=\"text-align:left;\"> (80.0200325291585, 336.863441708447) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Physical_Activity </td>\n   <td style=\"text-align:left;\"> Categorical </td>\n   <td style=\"text-align:left;\"> c(\"Moderate\", \"Low\", \"High\") </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Diet_Quality </td>\n   <td style=\"text-align:left;\"> Categorical </td>\n   <td style=\"text-align:left;\"> c(\"Poor\", \"Good\", \"Average\") </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Alcohol_Consumption </td>\n   <td style=\"text-align:left;\"> Categorical </td>\n   <td style=\"text-align:left;\"> c(\"Low\", \"Moderate\", \"High\", \"None\") </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Stress_Levels </td>\n   <td style=\"text-align:left;\"> Continuous </td>\n   <td style=\"text-align:left;\"> (0, 10) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> BMI </td>\n   <td style=\"text-align:left;\"> Continuous </td>\n   <td style=\"text-align:left;\"> (5.57964898085741, 46.0968317188957) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Heart_Rate </td>\n   <td style=\"text-align:left;\"> Continuous </td>\n   <td style=\"text-align:left;\"> (30.029853424897, 108.782168778169) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Systolic_BP </td>\n   <td style=\"text-align:left;\"> Continuous </td>\n   <td style=\"text-align:left;\"> (56.2295466102653, 178.772775321021) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Diastolic_BP </td>\n   <td style=\"text-align:left;\"> Continuous </td>\n   <td style=\"text-align:left;\"> (39.9545374067028, 117.673278434115) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Family_History </td>\n   <td style=\"text-align:left;\"> Categorical </td>\n   <td style=\"text-align:left;\"> c(\"No\", \"Yes\") </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Heart_Attack_Occurrence </td>\n   <td style=\"text-align:left;\"> Categorical </td>\n   <td style=\"text-align:left;\"> c(\"No\", \"Yes\") </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n:::\n\n### **3 Data Wrangling**\n\n#### **3.1 Removing irrelevant data**\n\nWe first remove the 15 'extra columns' in the dataset, which are irrelvant for our analysis, leaving just 17 variables:\n\n[General Demographic Variables]{.underline}\n\n-   Age\n-   Gender\n-   Region\n-   BMI\n\n[Lifestyle Factors]{.underline}\n\n-   Smoking_History\n-   Physical_Activity\n-   Diet_Quality\n-   Alcohol_Consumption\n-   Stress_Levels\n\n[Medical History]{.underline}\n\n-   Diabetes_History\n-   Hypertension_History\n-   Cholesterol_History\n-   Heart_Rate\n-   Systolic_BP\n-   Diastolic_BP\n-   Family_History\n-   Heart_Attack_Occurrence\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf<-heart_attack[, 1:17]\n```\n:::\n\n\n\n#### **3.2 Check for duplicated or missing values**\n\nNext, the `duplicated()` and `is.na()` functions are used to check for duplicate records and missing values in the dataset respectively.\n\nThere are no duplicated records or missing values in this dataset.\n\n::: panel-tabset\n\n## Duplicated records\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf[duplicated(df),]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 0 × 17\n# ℹ 17 variables: Age <dbl>, Gender <chr>, Region <chr>, Smoking_History <chr>,\n#   Diabetes_History <chr>, Hypertension_History <chr>,\n#   Cholesterol_Level <dbl>, Physical_Activity <chr>, Diet_Quality <chr>,\n#   Alcohol_Consumption <chr>, Stress_Levels <dbl>, BMI <dbl>,\n#   Heart_Rate <dbl>, Systolic_BP <dbl>, Diastolic_BP <dbl>,\n#   Family_History <chr>, Heart_Attack_Occurrence <chr>\n```\n\n\n:::\n:::\n\n\n\n## Missing values\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(is.na(df))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n:::\n\n\n\n:::\n\n#### **3.3 Recode variables**\n\nThe age distribution in the population is shown in the figure below. There is a relatively even spread of records from different ages. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(df, aes(Age)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"#7F948F\") +\n  labs(title = \"Frequency of Age\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\nTo facilitate comparison of profiles of younger versus older heart attack patients, we can create a new variable named *Age_Group* to bin the records into different age groups:\n\n1) Young Adults: 18-35\n2) Middle-aged Adults: 36-65\n3) Old Adults: 66-79\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf$Age_Groups <- ifelse(df$Age<=35, \"Young\", ifelse(df$Age<=65, \"Middle-aged\", \"Old\"))\n```\n:::\n",
    "supporting": [
      "Take-home_Ex01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}